{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GrifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","ApiKey","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GrifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAE5BL,EAAc,IACdH,GAAc,SAAAS,GAAI,MAAI,CAAEP,QAK5B,SACI,uBACIQ,KAAK,OACLC,MAAST,EACTU,SAjBc,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,a,8BCP/CG,EAAO,uCAAG,WAAOC,EAAUC,GAAjB,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUJ,GAD9C,oBACoEC,EADpE,qBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,wDC6BLO,EAzBM,SAAEhB,GAEnB,IAFiC,EAIPd,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IANoB,mBAI1BC,EAJ0B,KAInBC,EAJmB,KAsBjC,OAZAC,qBAAW,WAEPrB,EAASC,EAVE,oCAWNqB,MAAM,SAAAC,GACHH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAItB,CAAEjB,IAEEkB,GCdIK,EAVM,SAAC,GAAuB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OACI,sBAAKqB,UAAU,gEAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCkBDc,EApBC,SAAC,GAAmB,IAAhB3B,EAAe,EAAfA,SAAe,EAGGgB,EAAchB,GAAlCc,EAHiB,EAGvBN,KAAcS,EAHS,EAGTA,QAEtB,OACI,qCACI,6BAAMjB,IAEJiB,GAAW,0CAEb,qBAAKO,UAAU,YAAf,SAEQV,EAAOJ,KAAK,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aCW/CgB,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,IAFtB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEI4C,EAAWnB,KAAK,SAAAV,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAYA,GADNA,YCX9B8B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2ee5cf30.chunk.js","sourcesContent":["import React,{ useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >= 2) {\r\n\r\n            setInputValue('');\r\n            setCategories(cats => [ inputValue ]);\r\n        } \r\n    }\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async( category, ApiKey) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=${ApiKey}&limit=8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const ApiKey = \"IPDmvhDzm0liJgSooGZzCeivUyTZZ82L\";\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    //Uso un useEffect para traer la data de la Api de giphy, de lo contrario si en algun momento cambia algo\r\n    // de este componente va a volver a traer nuevamente la data.\r\n    useEffect( () => {\r\n\r\n        getGifs( category, ApiKey )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GrifGridItem = ( { id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand animate__delay-.5s\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GrifGridItem\r\n\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\nimport GrifGridItem from './GrifGridItem';\r\n\r\n\r\nconst GifGrid = ( { category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Loading..</p>  }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => <GrifGridItem key={img.id} {...img} /> )\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                categories.map( category =>\r\n\r\n                    <GifGrid\r\n                        key= {category}\r\n                        category= { category }\r\n                    /> )\r\n                    \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\n\n\nReactDOM.render(\n\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}